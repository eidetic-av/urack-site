#+TITLE: System Overview
#+HUGO_SECTION: overview
#+HUGO_WEIGHT: 200
#+HUGO_BASE_DIR: ../../hugo/

* System Overview
URack uses VCV Rack as a front-end to the URack Player which handles the
manipulation and rendering of graphics systems.

Communication between VCV and the URack Player works through a network
connection. This network can either be an internal connection (with both VCV and
the URack Player running on the same computer) or an external connection (where
VCV is run on one machine that controls URack Player instances on any number of
networked devices). This communication is bi-directional, and uses the Open
Sound Control (OSC) protocol.

Simply put, when a URack module inside VCV has a parameter changed — either by
the user tweaking a knob themselves, or from a cable plugged into an input port
— this change is passed onto the URack Player through the network to update its
visual state. If a URack module computes some parameters inside the URack Player
(i.e. on the graphical side), it's able to pipe these in the other direction
into an output port.

The URack Player itself — and the modules that it hosts — are built in the Unity
game engine using the C♯ programming language or the node-based VFX-Graph
environment. A URack module's assemblies and assets are compiled and packaged
into plugins that are loaded into the Player at runtime, allowing them to be
easily distributed like any other VCV Rack module.
